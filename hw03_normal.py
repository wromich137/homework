# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1


def fibonacci(n, m):
    fib = [1,1]
    i = 1
    while len(fib) < m:
        fib.append(fib[i-1]+fib[i])
        i += 1
    return fib[n:m]


print(fibonacci(9,15))

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


#my_list = [2, 10, -12, 2.5, 20, -11, 4, 4, 0]

def bubble(my_list):
    i = 0
    while i < len(my_list) - 1:
        j = 0
        while j < len(my_list) - 1 - i:
            if my_list[j] > my_list[j+1]:
                my_list[j], my_list[j+1] = my_list[j+1], my_list[j]
            j += 1
        i += 1
    return my_list

print(bubble([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.
#А1[х1, у1]
#А2[x2, у2]
#А3[x3, у3]
#А4[х4, у4]
# Предположил, что точки x и y - это декартовы координаты. Исходя из этого,
# если разницы между параллельными прямыми будут равны, а также координаты y
# параллельных вершин будут равны, то указанные точки могут быть вершинами параллелограмма

x1 = 1
y1 = 1
x2 = 2
y2 = 3
x3 = 6
y3 = 1
x4 = 5
y4 = 3

if x3 - x2 == x4 - x1 and y1 == y3 and y2 == y4:
    print("Могут быть вершинами паралеллограмма")
else:
    print("Не могут быть вершинами параллелограмма")
    



